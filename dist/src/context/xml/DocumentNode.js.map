{"version":3,"file":"DocumentNode.js","sourceRoot":"","sources":["../../../../src/context/xml/DocumentNode.ts"],"names":[],"mappings":";;AAAA,yBAA0B;AAG1B;IAII,sBAAY,UAAgC;QAAhC,2BAAA,EAAA,eAAgC;QACxC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAA;IAChC,CAAC;IAED,mCAAY,GAAZ,UAAa,SAAwB;QACjC,MAAM,CAAC,IAAI,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAA;IAC9D,CAAC;IAED,oCAAa,GAAb;QACI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAC,QAAgB,EAAE,SAAwB;YACrE,MAAM,CAAC,QAAQ,GAAG,SAAS,CAAC,aAAa,EAAE,CAAA;QAC/C,CAAC,EAAE,CAAC,CAAC,CAAA;IACT,CAAC;IAED,kCAAW,GAAX;QACI,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,GAAG,CAAC,CAAA;IACnC,CAAC;IAED,+BAAQ,GAAR;QACI,IAAM,UAAU,GAAe,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAA,EAAE,IAAI,OAAA,EAAE,CAAC,MAAM,EAAE,EAAX,CAAW,CAAC,CAAA;QAErE,MAAM,CAAC,GAAG,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,EAAE;YACnC,WAAW,EAAE,IAAI;YACjB,MAAM,EAAE,IAAI;SACf,CAAC,CAAC,QAAQ,EAAE,CAAA;IACjB,CAAC;IACL,mBAAC;AAAD,CAAC,AA9BD,IA8BC;AA9BY,oCAAY","sourcesContent":["import * as xml from 'xml'\nimport {TestSuiteNode} from './TestSuiteNode'\n\nexport class DocumentNode {\n\n    private testsuites: TestSuiteNode[]\n\n    constructor(testsuites: TestSuiteNode[] = []) {\n        this.testsuites = testsuites\n    }\n\n    addTestSuite(testsuite: TestSuiteNode): DocumentNode {\n        return new DocumentNode(this.testsuites.concat(testsuite))\n    }\n\n    countFailures(): number {\n        return this.testsuites.reduce((failures: number, testsuite: TestSuiteNode) => {\n            return failures + testsuite.countFailures()\n        }, 0)\n    }\n\n    hasFailures(): boolean {\n        return this.countFailures() > 0\n    }\n\n    toString(): string {\n        const testsuites: Array<any> = this.testsuites.map(ts => ts.toJson())\n\n        return xml({ testsuites: testsuites }, {\n            declaration: true,\n            indent: '\\t'\n        }).toString()\n    }\n}\n"]}