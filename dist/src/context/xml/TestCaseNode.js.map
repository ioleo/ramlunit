{"version":3,"file":"TestCaseNode.js","sourceRoot":"","sources":["../../../../src/context/xml/TestCaseNode.ts"],"names":[],"mappings":";;AAGA;IAKI,sBAAY,IAAY,EAAE,QAAuB;QAC7C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAChB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;IAC5B,CAAC;IAED,oCAAa,GAAb;QACI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAA;IAC/B,CAAC;IAED,kCAAW,GAAX;QACI,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,GAAG,CAAC,CAAA;IACnC,CAAC;IAED,6BAAM,GAAN;QACI,IAAM,QAAQ,GAAe,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,MAAM,EAAE,EAAV,CAAU,CAAC,CAAA;QAE/D,MAAM,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAA;IAClE,CAAC;IAEO,2BAAI,GAAZ;QACI,MAAM,CAAC;YACH,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,QAAQ,EAAE,IAAI,CAAC,aAAa,EAAE;SACjC,CAAA;IACL,CAAC;IACL,mBAAC;AAAD,CAAC,AA9BD,IA8BC;AA9BY,oCAAY","sourcesContent":["import {FailureNode} from './FailureNode'\n\nexport type TestCaseNodeAttr = { name: string, failures: number }\nexport class TestCaseNode {\n\n    private name: string\n    private failures: FailureNode[]\n\n    constructor(name: string, failures: FailureNode[]) {\n        this.name = name\n        this.failures = failures\n    }\n\n    countFailures(): number {\n        return this.failures.length\n    }\n\n    hasFailures(): boolean {\n        return this.countFailures() > 0\n    }\n\n    toJson(): Object {\n        const failures: Array<any> = this.failures.map(f => f.toJson())\n\n        return { testcase: [{ _attr: this.attr() }].concat(failures) }\n    }\n\n    private attr(): TestCaseNodeAttr {\n        return {\n            name: this.name,\n            failures: this.countFailures()\n        }\n    }\n}\n"]}