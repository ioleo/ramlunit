{"version":3,"file":"Time.js","sourceRoot":"","sources":["../../../../src/context/time/Time.ts"],"names":[],"mappings":";;AAAA;IAII,cAAY,KAAY;QACd,IAAA;;8BAEgB,EAFf,eAAO,EAAE,mBAAW,CAEL;QAEtB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;QACtB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAA;IAClC,CAAC;IAED,sBAAO,GAAP;QACI,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,CAAA;IAC3C,CAAC;IAED,uBAAQ,GAAR;QACI,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,CAAA;QAE1D,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAA;IAC1B,CAAC;IACL,WAAC;AAAD,CAAC,AAtBD,IAsBC;AAtBY,oBAAI","sourcesContent":["export class Time {\n    seconds: number\n    nanoseconds: number\n\n    constructor(since?: Time) {\n        const [seconds, nanoseconds] = (since)\n            ? process.hrtime(since.toArray())\n            : process.hrtime()\n\n        this.seconds = seconds\n        this.nanoseconds = nanoseconds\n    }\n\n    toArray(): [number, number] {\n        return [this.seconds, this.nanoseconds]\n    }\n\n    toString(): string {\n        const time = this.seconds + (this.nanoseconds / 100000000)\n\n        return time.toString()\n    }\n}"]}