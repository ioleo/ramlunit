{"version":3,"file":"ParserTestSuite.js","sourceRoot":"","sources":["../../../../../src/context/testing/parser/ParserTestSuite.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,0BAA2B;AAC3B,0DAAsD;AAEtD,yDAAqD;AAErD,+CAA2C;AAE3C;IAAqC,mCAAiB;IAAtD;QAAA,qEAeC;QAbG,UAAI,GAAW,eAAe,CAAA;;IAalC,CAAC;IAXG,6BAAG,GAAH;QACI,IAAM,KAAK,GAAa,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,uCAAuC,CAAC,CAAC,CAAA;QAC/E,IAAA,sDAAgD,EAA/C,WAAG,EAAE,YAAI,CAAsC;QAEtD,IAAM,WAAW,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,UAAC,CAAkB,IAAO,MAAM,CAAC,CAAC,CAAC,IAAI,CAAA,CAAC,CAAC,CAAC,CAAA;QACtF,IAAM,SAAS,GAAmB,KAAK,CAAC,MAAM,CAAC,UAAC,KAAqB,EAAE,IAAY;YAC/E,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,2BAAY,CAAC,cAAc,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAA;QACvE,CAAC,EAAE,EAAE,CAAC,CAAA;QAEN,MAAM,CAAC,IAAI,6BAAa,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,SAAS,CAAC,CAAA;IACxD,CAAC;IACL,sBAAC;AAAD,CAAC,AAfD,CAAqC,qCAAiB,GAerD;AAfY,0CAAe","sourcesContent":["import * as _ from 'lodash'\nimport {AbstractTestSuite} from '../AbstractTestSuite'\nimport {TestCaseNode} from '../../xml/TestCaseNode'\nimport {TestSuiteNode} from '../../xml/TestSuiteNode'\nimport {RamlParserError} from \"raml-1-parser/dist/raml1/highLevelAST\"\nimport {ParserObject} from \"./ParserObject\"\n\nexport class ParserTestSuite extends AbstractTestSuite {\n\n    name: string = 'raml-1-parser'\n\n    run(): TestSuiteNode {\n        const tests: string[] = Object.keys(require('raml-1-parser/resources/errorMessages'))\n        const [api, time] = ParserObject.parse(this.inputPath)\n\n        const errorGroups = _.groupBy(api.errors(), (e: RamlParserError) => { return e.code })\n        const testcases: TestCaseNode[] = tests.reduce((cases: TestCaseNode[], name: string) => {\n            return cases.concat(ParserObject.createTestCase(name, errorGroups))\n        }, [])\n\n        return new TestSuiteNode(this.name, time, testcases)\n    }\n}\n"]}