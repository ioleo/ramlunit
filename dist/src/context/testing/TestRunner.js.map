{"version":3,"file":"TestRunner.js","sourceRoot":"","sources":["../../../../src/context/testing/TestRunner.ts"],"names":[],"mappings":";;AACA,oDAAgD;AAEhD;IAMI,oBAAY,MAAgC,EAAE,OAAwB;QAA1D,uBAAA,EAAA,WAAgC;QAAE,wBAAA,EAAA,eAAwB;QAClE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;QACpB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;IAC1B,CAAC;IAED,wBAAG,GAAH;QAAA,iBAQC;QAPG,IAAM,YAAY,GAAG,UAAC,QAAsB,EAAE,KAAwB;YAClE,EAAE,CAAC,CAAC,KAAI,CAAC,OAAO,CAAC;gBAAC,OAAO,CAAC,GAAG,CAAC,mBAAiB,KAAK,CAAC,IAAI,QAAK,CAAC,CAAA;YAE/D,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAA;QAC7C,CAAC,CAAA;QAED,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,2BAAY,EAAE,CAAC,CAAA;IAC/D,CAAC;IAEL,iBAAC;AAAD,CAAC,AArBD,IAqBC;AArBY,gCAAU","sourcesContent":["import {AbstractTestSuite} from './AbstractTestSuite'\nimport {DocumentNode} from '../xml/DocumentNode'\n\nexport class TestRunner {\n\n    suites: AbstractTestSuite[]\n\n    verbose: boolean\n\n    constructor(suites: AbstractTestSuite[] = [], verbose: boolean = false) {\n        this.suites = suites\n        this.verbose = verbose\n    }\n\n    run(): DocumentNode {\n        const runTestSuite = (document: DocumentNode, suite: AbstractTestSuite) => {\n            if (this.verbose) console.log(`Running suite ${suite.name}...`)\n\n            return document.addTestSuite(suite.run())\n        }\n\n        return this.suites.reduce(runTestSuite, new DocumentNode())\n    }\n\n}"]}